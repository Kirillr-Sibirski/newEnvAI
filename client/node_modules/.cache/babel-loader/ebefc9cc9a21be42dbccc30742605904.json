{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/kiril/Desktop/newenvai/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _slicedToArray from\"C:/Users/kiril/Desktop/newenvai/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"C:/Users/kiril/Desktop/newenvai/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React,{useState,useEffect}from'react';import{animalText}from'./Animals';// Housekeeping for openAI\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _require=require(\"openai\"),Configuration=_require.Configuration,OpenAIApi=_require.OpenAIApi;var configuration=new Configuration({apiKey:process.env.REACT_APP_OPENAI_API_KEY});var openai=new OpenAIApi(configuration);var errors;// Send 3 requests to DALL-E mini with descriptions\nfunction generate_images(_x,_x2,_x3){return _generate_images.apply(this,arguments);}function _generate_images(){_generate_images=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(neutral,positive,negative){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:errors(\"AI: Image generation in progress..\");// Send request to replicate.com API to generate images\ncase 1:case\"end\":return _context.stop();}}},_callee);}));return _generate_images.apply(this,arguments);}function generate_description(_x4,_x5,_x6){return _generate_description.apply(this,arguments);}// Check adjectives + description with sentiment analysis for positive, neutral or negative using openAI's Classification\nfunction _generate_description(){_generate_description=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(desc,good,bad){var description,adj_positive,adj_negative;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return openai.createCompletion({model:\"text-davinci-002\",prompt:\"Create sentence with\"+desc,max_tokens:20,temperature:0.6});case 2:description=_context2.sent;_context2.next=5;return openai.createCompletion({model:\"text-davinci-002\",prompt:\"Add adjectives \"+good+\"to sentence \"+desc,max_tokens:20,temperature:0.4});case 5:adj_positive=_context2.sent;_context2.next=8;return openai.createCompletion({model:\"text-davinci-002\",prompt:\"Add adjectives \"+bad+\"to sentence \"+desc,max_tokens:20,temperature:0.4});case 8:adj_negative=_context2.sent;console.log(description.data.choices[0].text,adj_positive.data.choices[0].text,adj_negative.data.choices[0].text);generate_images(description.data.choices[0].text,adj_positive.data.choices[0].text,adj_negative.data.choices[0].text);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return _generate_description.apply(this,arguments);}function sentiment_analysis(_x7,_x8,_x9){return _sentiment_analysis.apply(this,arguments);}// Check 'desc' sentence for containing animal vocabulary \nfunction _sentiment_analysis(){_sentiment_analysis=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(desc,good,bad){var response,originalText,rspList,substrings;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return openai.createCompletion({model:\"text-davinci-002\",prompt:\"Classify the sentiment in these words: \\n 1. '\"+desc+\"'\\n 2. '\"+good+\"'\\n 3. '\"+bad+\"'\",max_tokens:40,temperature:0});case 2:response=_context3.sent;originalText=response.data.choices[0].text.toLocaleLowerCase();rspList=originalText.split('\\n');substrings=[\"positive\",\"neutral\",\"negative\"];// This checks if user response match with intended response\nif(rspList[2].includes(substrings[1])&&rspList[3].includes(substrings[0])&&rspList[4].includes(substrings[2])){// if ok execute the rest\nerrors(\"AI: Description generation in progress..\");generate_description(desc,good,bad);}else{errors(\"AI: Hm.. First input must be neutral, second input must be positive, third input must be negative. Am I goin' crazy?\");}case 7:case\"end\":return _context3.stop();}}},_callee3);}));return _sentiment_analysis.apply(this,arguments);}function animalVocab(_x10,_x11,_x12){return _animalVocab.apply(this,arguments);}function _animalVocab(){_animalVocab=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(desc,good,bad){var y;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:y=0;case 1:if(!(y<animalText.length)){_context4.next=12;break;}if(!desc.includes(animalText[y].toLocaleLowerCase())){_context4.next=8;break;}// if animal is found\nerrors(\"AI: Sentiment analysis in progress..\");// Checks if text is positive, neutral or negative\nsentiment_analysis(desc,good,bad);return _context4.abrupt(\"break\",12);case 8:errors(\"AI: I don't know such an animal, pls change your description.\");case 9:y++;_context4.next=1;break;case 12:case\"end\":return _context4.stop();}}},_callee4);}));return _animalVocab.apply(this,arguments);}function Image(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),desc=_useState2[0],setDesc=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),good=_useState4[0],setGood=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),bad=_useState6[0],setBad=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),errorMessage=_useState8[0],setErrorMessage=_useState8[1];useEffect(function(){/* Assign update to outside variable */errors=setErrorMessage;/* Unassign when component unmounts */return function(){return errors=null;};});useEffect(function(){fetch(\"/api\").then(function(res){return res.json();}).then(function(data){return console.log(data.message);});},[]);var handleSubmit=function handleSubmit(event){event.preventDefault();setErrorMessage(\"AI: Checking description for 'animals'..\");animalVocab(desc.toLocaleLowerCase(),good.toLocaleLowerCase(),bad.toLocaleLowerCase());};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Image Generation\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Description:\\xA0\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:desc,onChange:function onChange(e){return setDesc(e.target.value);}})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Write adjectives to describe 'good' state of NFT:\\xA0\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:good,onChange:function onChange(e){return setGood(e.target.value);}})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Write adjectives to describe 'bad' state of NFT:\\xA0\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:bad,onChange:function onChange(e){return setBad(e.target.value);}})]})}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\"})]}),/*#__PURE__*/_jsx(\"h3\",{children:errorMessage})]});}export default Image;","map":{"version":3,"names":["React","useState","useEffect","animalText","require","Configuration","OpenAIApi","configuration","apiKey","process","env","REACT_APP_OPENAI_API_KEY","openai","errors","generate_images","neutral","positive","negative","generate_description","desc","good","bad","createCompletion","model","prompt","max_tokens","temperature","description","adj_positive","adj_negative","console","log","data","choices","text","sentiment_analysis","response","originalText","toLocaleLowerCase","rspList","split","substrings","includes","animalVocab","y","length","Image","setDesc","setGood","setBad","errorMessage","setErrorMessage","fetch","then","res","json","message","handleSubmit","event","preventDefault","e","target","value"],"sources":["C:/Users/kiril/Desktop/newenvai/client/src/pages/Image.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { animalText } from './Animals';\r\n\r\n// Housekeeping for openAI\r\nconst { Configuration, OpenAIApi } = require(\"openai\");\r\nconst configuration = new Configuration({\r\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\r\n});\r\nconst openai = new OpenAIApi(configuration);\r\n\r\nlet errors;\r\n\r\n// Send 3 requests to DALL-E mini with descriptions\r\nasync function generate_images(neutral, positive, negative) {\r\n  errors(\"AI: Image generation in progress..\")\r\n  // Send request to replicate.com API to generate images\r\n}\r\n\r\nasync function generate_description(desc, good, bad) {\r\n  // Make input sentence more creative & interesting\r\n  const description = await openai.createCompletion({\r\n    model: \"text-davinci-002\",\r\n    prompt: \"Create sentence with\"+desc,\r\n    max_tokens: 20,\r\n    temperature: 0.6,\r\n  });\r\n  // Generate sentences with description and adjectives using openAI's Generation\r\n  const adj_positive = await openai.createCompletion({\r\n    model: \"text-davinci-002\",\r\n    prompt: \"Add adjectives \"+good+\"to sentence \"+desc,\r\n    max_tokens: 20,\r\n    temperature: 0.4,\r\n  });\r\n  // Generate sentences with description and adjectives using openAI's Generation\r\n  const adj_negative = await openai.createCompletion({\r\n    model: \"text-davinci-002\",\r\n    prompt: \"Add adjectives \"+bad+\"to sentence \"+desc,\r\n    max_tokens: 20,\r\n    temperature: 0.4,\r\n  });\r\n  console.log(description.data.choices[0].text, adj_positive.data.choices[0].text, adj_negative.data.choices[0].text)\r\n  generate_images(description.data.choices[0].text, adj_positive.data.choices[0].text, adj_negative.data.choices[0].text);\r\n}\r\n// Check adjectives + description with sentiment analysis for positive, neutral or negative using openAI's Classification\r\nasync function sentiment_analysis(desc, good, bad) {\r\n    // Generate sentences with description and adjectives using openAI's Generation\r\n    const response = await openai.createCompletion({\r\n      model: \"text-davinci-002\",\r\n      prompt: \"Classify the sentiment in these words: \\n 1. '\"+desc+\"'\\n 2. '\"+good+\"'\\n 3. '\"+bad+\"'\",\r\n      max_tokens: 40,\r\n      temperature: 0,\r\n    });\r\n    const originalText = response.data.choices[0].text.toLocaleLowerCase();\r\n    let rspList = originalText.split('\\n');\r\n    let substrings = [\"positive\", \"neutral\", \"negative\"];\r\n    // This checks if user response match with intended response\r\n    if(rspList[2].includes(substrings[1]) && rspList[3].includes(substrings[0]) && rspList[4].includes(substrings[2])) {\r\n      // if ok execute the rest\r\n      errors(\"AI: Description generation in progress..\")\r\n      generate_description(desc, good, bad);\r\n    }\r\n    else { \r\n      errors(\"AI: Hm.. First input must be neutral, second input must be positive, third input must be negative. Am I goin' crazy?\")\r\n    }\r\n}\r\n// Check 'desc' sentence for containing animal vocabulary \r\nasync function animalVocab(desc, good, bad){\r\n    for(var y = 0; y < animalText.length; y++) { // loops through all the list\r\n      if(desc.includes(animalText[y].toLocaleLowerCase())) { // if animal is found\r\n        errors(\"AI: Sentiment analysis in progress..\") // Checks if text is positive, neutral or negative\r\n        sentiment_analysis(desc, good, bad)\r\n        break;\r\n      }\r\n      else {\r\n        errors(\"AI: I don't know such an animal, pls change your description.\")\r\n      }\r\n    }\r\n}\r\n\r\nfunction Image() {\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [good, setGood] = useState(\"\");\r\n    const [bad, setBad] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      /* Assign update to outside variable */\r\n      errors = setErrorMessage\r\n  \r\n      /* Unassign when component unmounts */\r\n      return () => errors = null\r\n    })\r\n    useEffect(() => {\r\n      fetch(\"/api\")\r\n        .then((res) => res.json())\r\n        .then((data) => console.log(data.message));\r\n    }, []);\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      \r\n      setErrorMessage(\"AI: Checking description for 'animals'..\")\r\n      animalVocab(desc.toLocaleLowerCase(), good.toLocaleLowerCase(), bad.toLocaleLowerCase());\r\n      }\r\n    return (\r\n        <div>\r\n            <h1>Image Generation</h1>\r\n            <form onSubmit={handleSubmit}>\r\n            <div><label>Description:&nbsp;\r\n                <input \r\n                type=\"text\" \r\n                value={desc}\r\n                onChange={(e) => setDesc(e.target.value)}\r\n                />\r\n            </label></div>\r\n            <div><label>Write adjectives to describe 'good' state of NFT:&nbsp;\r\n                <input \r\n                type=\"text\" \r\n                value={good}\r\n                onChange={(e) => setGood(e.target.value)}\r\n                />\r\n            </label></div>\r\n            <div><label>Write adjectives to describe 'bad' state of NFT:&nbsp;\r\n                <input \r\n                type=\"text\" \r\n                value={bad}\r\n                onChange={(e) => setBad(e.target.value)}\r\n                />\r\n            </label></div>\r\n            <input type=\"submit\" />\r\n            </form>\r\n            <h3>{errorMessage}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Image;"],"mappings":"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"},"metadata":{},"sourceType":"module"}