{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiril\\\\Desktop\\\\newenvai\\\\client\\\\src\\\\pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Navigate } from \"react-router-dom\";\nimport { Route, Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var wallet_address = null; // To use on other pages\n\nfunction Home() {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n        window.location.href = '/image'; // Redirect to image generation page \n\n        setErrorMessage();\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  }; // update account, will cause component re-render\n\n\n  const accountChangedHandler = newAccount => {\n    wallet_address = newAccount;\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  }; // listen for account changes\n\n\n  window.ethereum.on('accountsChanged', accountChangedHandler);\n  window.ethereum.on('chainChanged', chainChangedHandler);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 14\n      },\n      className: \"m-2\",\n      children: \"With NewEnvAI people can freely mint dynamic animal NFTs which represent real environmental data. The uniqueness of this project is determined by the usage of DALL-E neural network which allows users to create any images by just writing a description of it (e.g. bear in river)! There are 3 stages of NFTs: 'bad', 'neutral' and 'good' that will change accordingly to the data provided by an oracle from environmental API.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      className: \"btn btn-secondary btn-sm m-2\",\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"1dTypIBLZf1UmhVmcEWxMMpu1w8=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Navigate","Route","Redirect","wallet_address","Home","errorMessage","setErrorMessage","connButtonText","setConnButtonText","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","location","href","catch","error","message","console","log","newAccount","chainChangedHandler","reload","on","fontSize"],"sources":["C:/Users/kiril/Desktop/newenvai/client/src/pages/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Route, Redirect } from 'react-router'\r\n\r\nexport var wallet_address = null; // To use on other pages\r\n\r\nfunction Home() {\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\r\n\r\n\tconst connectWalletHandler = () => {\r\n\t\tif (window.ethereum && window.ethereum.isMetaMask) {\r\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\r\n\t\t\t.then(result => {\r\n\t\t\t\taccountChangedHandler(result[0]);\r\n\t\t\t\tsetConnButtonText('Wallet Connected');\r\n                window.location.href = '/image'; // Redirect to image generation page \r\n                setErrorMessage()\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetErrorMessage(error.message);\r\n\t\t\t});\r\n\r\n\t\t} else {\r\n\t\t\tconsole.log('Need to install MetaMask');\r\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\r\n\t\t}\r\n\t}\r\n\r\n\t// update account, will cause component re-render\r\n\tconst accountChangedHandler = (newAccount) => {\r\n        wallet_address = newAccount;\r\n\t}\r\n\r\n\tconst chainChangedHandler = () => {\r\n\t\t// reload the page to avoid any errors with chain change mid use of application\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\r\n\t// listen for account changes\r\n\twindow.ethereum.on('accountsChanged', accountChangedHandler);\r\n\r\n\twindow.ethereum.on('chainChanged', chainChangedHandler);\r\n    return (\r\n        <div>\r\n            <p style={{ fontSize: 14 }} className=\"m-2\">With NewEnvAI people can freely mint dynamic animal NFTs which represent real environmental data.\r\n               The uniqueness of this project is determined by the usage of DALL-E neural network which allows users to create any images by just writing a description of it (e.g. bear in river)!\r\n               There are 3 stages of NFTs: 'bad', 'neutral' and 'good' that will change accordingly to the data provided by an oracle from environmental API.</p>\r\n            <button onClick={connectWalletHandler} className=\"btn btn-secondary btn-sm m-2\">{connButtonText}</button>\r\n            {errorMessage}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;;AAEA,OAAO,IAAIC,cAAc,GAAG,IAArB,C,CAA2B;;AAElC,SAASC,IAAT,GAAgB;EAAA;;EACZ,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;EACH,MAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,gBAAD,CAApD;;EAEA,MAAMU,oBAAoB,GAAG,MAAM;IAClC,IAAIC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,UAAvC,EAAmD;MAClDF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;QAAEC,MAAM,EAAE;MAAV,CAAxB,EACCC,IADD,CACMC,MAAM,IAAI;QACfC,qBAAqB,CAACD,MAAM,CAAC,CAAD,CAAP,CAArB;QACAR,iBAAiB,CAAC,kBAAD,CAAjB;QACYE,MAAM,CAACQ,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB,CAHG,CAG8B;;QACjCb,eAAe;MAC3B,CAND,EAOCc,KAPD,CAOOC,KAAK,IAAI;QACff,eAAe,CAACe,KAAK,CAACC,OAAP,CAAf;MACA,CATD;IAWA,CAZD,MAYO;MACNC,OAAO,CAACC,GAAR,CAAY,0BAAZ;MACAlB,eAAe,CAAC,uDAAD,CAAf;IACA;EACD,CAjBD,CAJe,CAuBf;;;EACA,MAAMW,qBAAqB,GAAIQ,UAAD,IAAgB;IACvCtB,cAAc,GAAGsB,UAAjB;EACN,CAFD;;EAIA,MAAMC,mBAAmB,GAAG,MAAM;IACjC;IACAhB,MAAM,CAACQ,QAAP,CAAgBS,MAAhB;EACA,CAHD,CA5Be,CAkCf;;;EACAjB,MAAM,CAACC,QAAP,CAAgBiB,EAAhB,CAAmB,iBAAnB,EAAsCX,qBAAtC;EAEAP,MAAM,CAACC,QAAP,CAAgBiB,EAAhB,CAAmB,cAAnB,EAAmCF,mBAAnC;EACG,oBACI;IAAA,wBACI;MAAG,KAAK,EAAE;QAAEG,QAAQ,EAAE;MAAZ,CAAV;MAA4B,SAAS,EAAC,KAAtC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAQ,OAAO,EAAEpB,oBAAjB;MAAuC,SAAS,EAAC,8BAAjD;MAAA,UAAiFF;IAAjF;MAAA;MAAA;MAAA;IAAA,QAJJ,EAKKF,YALL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GAhDQD,I;;KAAAA,I;AAkDT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}