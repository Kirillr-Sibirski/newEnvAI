{"ast":null,"code":"\"use strict\";\n/* tslint:disable */\n\n/* eslint-disable */\n\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.0.5\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Configuration = void 0;\n\nconst packageJson = require(\"../package.json\");\n\nclass Configuration {\n  constructor() {\n    let param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.apiKey = param.apiKey;\n    this.organization = param.organization;\n    this.username = param.username;\n    this.password = param.password;\n    this.accessToken = param.accessToken;\n    this.basePath = param.basePath;\n    this.baseOptions = param.baseOptions;\n    this.formDataCtor = param.formDataCtor;\n\n    if (!this.baseOptions) {\n      this.baseOptions = {};\n    }\n\n    this.baseOptions.headers = Object.assign({\n      'User-Agent': `OpenAI/NodeJS/${packageJson.version}`,\n      'Authorization': `Bearer ${this.apiKey}`\n    }, this.baseOptions.headers);\n\n    if (this.organization) {\n      this.baseOptions.headers['OpenAI-Organization'] = this.organization;\n    }\n\n    if (!this.formDataCtor) {\n      this.formDataCtor = require(\"form-data\");\n    }\n  }\n  /**\n   * Check if the given MIME is a JSON MIME.\n   * JSON MIME examples:\n   *   application/json\n   *   application/json; charset=UTF8\n   *   APPLICATION/JSON\n   *   application/vnd.company+json\n   * @param mime - MIME (Multipurpose Internet Mail Extensions)\n   * @return True if the given MIME is JSON, false otherwise.\n   */\n\n\n  isJsonMime(mime) {\n    const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n}\n\nexports.Configuration = Configuration;","map":{"version":3,"names":["Object","defineProperty","exports","value","Configuration","packageJson","require","constructor","param","apiKey","organization","username","password","accessToken","basePath","baseOptions","formDataCtor","headers","assign","version","isJsonMime","mime","jsonMime","RegExp","test","toLowerCase"],"sources":["C:/Users/kiril/Desktop/newenvai/node_modules/openai/dist/configuration.js"],"sourcesContent":["\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.0.5\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Configuration = void 0;\nconst packageJson = require(\"../package.json\");\nclass Configuration {\n    constructor(param = {}) {\n        this.apiKey = param.apiKey;\n        this.organization = param.organization;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = param.baseOptions;\n        this.formDataCtor = param.formDataCtor;\n        if (!this.baseOptions) {\n            this.baseOptions = {};\n        }\n        this.baseOptions.headers = Object.assign({ 'User-Agent': `OpenAI/NodeJS/${packageJson.version}`, 'Authorization': `Bearer ${this.apiKey}` }, this.baseOptions.headers);\n        if (this.organization) {\n            this.baseOptions.headers['OpenAI-Organization'] = this.organization;\n        }\n        if (!this.formDataCtor) {\n            this.formDataCtor = require(\"form-data\");\n        }\n    }\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\nexports.Configuration = Configuration;\n"],"mappings":"AAAA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AACA,MAAMF,aAAN,CAAoB;EAChBG,WAAW,GAAa;IAAA,IAAZC,KAAY,uEAAJ,EAAI;IACpB,KAAKC,MAAL,GAAcD,KAAK,CAACC,MAApB;IACA,KAAKC,YAAL,GAAoBF,KAAK,CAACE,YAA1B;IACA,KAAKC,QAAL,GAAgBH,KAAK,CAACG,QAAtB;IACA,KAAKC,QAAL,GAAgBJ,KAAK,CAACI,QAAtB;IACA,KAAKC,WAAL,GAAmBL,KAAK,CAACK,WAAzB;IACA,KAAKC,QAAL,GAAgBN,KAAK,CAACM,QAAtB;IACA,KAAKC,WAAL,GAAmBP,KAAK,CAACO,WAAzB;IACA,KAAKC,YAAL,GAAoBR,KAAK,CAACQ,YAA1B;;IACA,IAAI,CAAC,KAAKD,WAAV,EAAuB;MACnB,KAAKA,WAAL,GAAmB,EAAnB;IACH;;IACD,KAAKA,WAAL,CAAiBE,OAAjB,GAA2BjB,MAAM,CAACkB,MAAP,CAAc;MAAE,cAAe,iBAAgBb,WAAW,CAACc,OAAQ,EAArD;MAAwD,iBAAkB,UAAS,KAAKV,MAAO;IAA/F,CAAd,EAAkH,KAAKM,WAAL,CAAiBE,OAAnI,CAA3B;;IACA,IAAI,KAAKP,YAAT,EAAuB;MACnB,KAAKK,WAAL,CAAiBE,OAAjB,CAAyB,qBAAzB,IAAkD,KAAKP,YAAvD;IACH;;IACD,IAAI,CAAC,KAAKM,YAAV,EAAwB;MACpB,KAAKA,YAAL,GAAoBV,OAAO,CAAC,WAAD,CAA3B;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIc,UAAU,CAACC,IAAD,EAAO;IACb,MAAMC,QAAQ,GAAG,IAAIC,MAAJ,CAAW,+DAAX,EAA4E,GAA5E,CAAjB;IACA,OAAOF,IAAI,KAAK,IAAT,KAAkBC,QAAQ,CAACE,IAAT,CAAcH,IAAd,KAAuBA,IAAI,CAACI,WAAL,OAAuB,6BAAhE,CAAP;EACH;;AAlCe;;AAoCpBvB,OAAO,CAACE,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}