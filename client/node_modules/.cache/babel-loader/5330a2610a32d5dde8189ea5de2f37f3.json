{"ast":null,"code":"import _classCallCheck from \"C:/Users/kiril/Desktop/newenvai/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/kiril/Desktop/newenvai/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/kiril/Desktop/newenvai/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/kiril/Desktop/newenvai/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nvar defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name) {\n  switch (name) {\n    case \"homestead\":\n      return \"rpc.ankr.com/eth/\";\n\n    case \"ropsten\":\n      return \"rpc.ankr.com/eth_ropsten/\";\n\n    case \"rinkeby\":\n      return \"rpc.ankr.com/eth_rinkeby/\";\n\n    case \"goerli\":\n      return \"rpc.ankr.com/eth_goerli/\";\n\n    case \"matic\":\n      return \"rpc.ankr.com/polygon/\";\n\n    case \"arbitrum\":\n      return \"rpc.ankr.com/arbitrum/\";\n  }\n\n  return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport var AnkrProvider = /*#__PURE__*/function (_UrlJsonRpcProvider) {\n  _inherits(AnkrProvider, _UrlJsonRpcProvider);\n\n  var _super = _createSuper(AnkrProvider);\n\n  function AnkrProvider() {\n    _classCallCheck(this, AnkrProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AnkrProvider, [{\n    key: \"isCommunityResource\",\n    value: function isCommunityResource() {\n      return this.apiKey === defaultApiKey;\n    }\n  }], [{\n    key: \"getApiKey\",\n    value: function getApiKey(apiKey) {\n      if (apiKey == null) {\n        return defaultApiKey;\n      }\n\n      return apiKey;\n    }\n  }, {\n    key: \"getUrl\",\n    value: function getUrl(network, apiKey) {\n      if (apiKey == null) {\n        apiKey = defaultApiKey;\n      }\n\n      var connection = {\n        allowGzip: true,\n        url: \"https:/\\/\" + getHost(network.name) + apiKey,\n        throttleCallback: function throttleCallback(attempt, url) {\n          if (apiKey.apiKey === defaultApiKey) {\n            showThrottleMessage();\n          }\n\n          return Promise.resolve(true);\n        }\n      };\n\n      if (apiKey.projectSecret != null) {\n        connection.user = \"\";\n        connection.password = apiKey.projectSecret;\n      }\n\n      return connection;\n    }\n  }]);\n\n  return AnkrProvider;\n}(UrlJsonRpcProvider);","map":{"version":3,"mappings":";;;;AAGA,SAASA,mBAAT,QAAoC,aAApC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AAIA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,IAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAWC,OAAX,CAAf;AAGA,IAAME,aAAa,GAAG,kEAAtB;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAA6B;EACzB,QAAQA,IAAR;IACI,KAAK,WAAL;MACI,OAAO,mBAAP;;IACJ,KAAK,SAAL;MACI,OAAO,2BAAP;;IACJ,KAAK,SAAL;MACI,OAAO,2BAAP;;IACJ,KAAK,QAAL;MACI,OAAO,0BAAP;;IAEJ,KAAK,OAAL;MACI,OAAO,uBAAP;;IAEJ,KAAK,UAAL;MACI,OAAO,wBAAP;EAdR;;EAgBA,OAAOH,MAAM,CAACI,kBAAP,CAA0B,qBAA1B,EAAiD,MAAjD,EAAyDD,IAAzD,CAAP;AACH;;AAED,WAAaE,YAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;EAAA;;EAAA;IAAA;IAAA,OAGI,+BAAmB;MACf,OAAQ,KAAKC,MAAL,KAAgBL,aAAxB;IACH;EALL;IAAA;IAAA,OAOI,mBAAiBK,MAAjB,EAA4B;MACxB,IAAIA,MAAM,IAAI,IAAd,EAAoB;QAAE,OAAOL,aAAP;MAAuB;;MAC7C,OAAOK,MAAP;IACH;EAVL;IAAA;IAAA,OAYI,gBAAcC,OAAd,EAAgCD,MAAhC,EAA2C;MACvC,IAAIA,MAAM,IAAI,IAAd,EAAoB;QAAEA,MAAM,GAAGL,aAAT;MAAyB;;MAC/C,IAAMO,UAAU,GAAmB;QAC/BC,SAAS,EAAE,IADoB;QAE/BC,GAAG,EAAG,cAAcR,OAAO,CAACK,OAAO,CAACJ,IAAT,CAArB,GAAsCG,MAFb;QAG/BK,gBAAgB,EAAE,0BAACC,OAAD,EAAkBF,GAAlB,EAAiC;UAC/C,IAAIJ,MAAM,CAACA,MAAP,KAAkBL,aAAtB,EAAqC;YACjCL,mBAAmB;UACtB;;UACD,OAAOiB,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;QACH;MAR8B,CAAnC;;MAWA,IAAIR,MAAM,CAACS,aAAP,IAAwB,IAA5B,EAAkC;QAC9BP,UAAU,CAACQ,IAAX,GAAkB,EAAlB;QACAR,UAAU,CAACS,QAAX,GAAsBX,MAAM,CAACS,aAA7B;MACH;;MAED,OAAOP,UAAP;IACH;EA/BL;;EAAA;AAAA,EAAkCX,kBAAlC","names":["showThrottleMessage","UrlJsonRpcProvider","Logger","version","logger","defaultApiKey","getHost","name","throwArgumentError","AnkrProvider","apiKey","network","connection","allowGzip","url","throttleCallback","attempt","Promise","resolve","projectSecret","user","password"],"sources":["C:\\Users\\kiril\\Desktop\\newenvai\\client\\node_modules\\@ethersproject\\providers\\src.ts\\ankr-provider.ts"],"sourcesContent":["\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}